---
# https://circleci.com/developer/orbs/orb/circleci/terraform
version: '2.1'
orbs:
terraform: circleci/terraform@3.2.0

parameters:
  run_workflow_build:
    default: false
    type: boolean

version: '2.1'
jobs:
  init:
    docker:
      - image: hashicorp/terraform
    steps:
      - checkout
      - run: terraform init
      - run: terraform plan
      #- run: terraform apply -auto-approve
      - persist_to_workspace:
          root: .
          paths:
            - .


  destroy:
    docker:
      - image: hashicorp/terraform
    steps:
      - attach_workspace:
          at: .
      - run: terraform destroy -auto-approve 

workflows:
  test:
    jobs:
      - init
      # - hold:
      #     type: approval
      #     requires:
      #       - init
      - destroy:
          requires:
            - init


# jobs:
#   plan-destroy:
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: terraform create destroy plan
#           command: |
#             terraform plan -destroy -out tfdestroy 
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .

#   destroy:
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: terraform destroy
#           command: |
#             terraform apply -auto-approve tfdestroy
# workflows:
#   version: 2
#   infra-deploy-source:
#     when: <<pipeline.parameters.run_workflow_build>>
#     jobs:
#       - plan-destroy:
#           context : terraformenv1
#       - hold-destroy:
#           context : terraformenv1
#           type: approval
#           requires:
#             - plan-destroy
#       - destroy:
#           context : terraformenv1
#           requires:
#             - hold-destroy






  
# workflows:
#   infra-deploy-source:
#     #when: <<pipeline.parameters.run_workflow_build>>
#     jobs:
#       plan-destroy:
#         context : terraformenv1
#         steps:
#           - attach_workspace:
#               at: .
#           - run:
#               name: terraform create destroy plan
#               command: |
#                 terraform plan -destroy -out tfdestroy 
#               root: .
#               paths:
#                 - .
          